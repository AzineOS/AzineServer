# Expects:
#  PLATFORM_ROOT
#
# Defines:
#  ARCAN_PLATFORM
#  FSRV_PLATFORM
#  LWA_PLATFORM
#  STDLIB
#
#  APPL_DEST
#  RES_DEST
#  APIMAN_DEST
#  MAN_DEST
#
# Modifies:
#  compile_options (global)
#  PLATFORM_HEADER (global)
#  OS_DYLIB_EXTENSION
#

set(PLATFORM_PATH ${PLATFORM_ROOT}/posix)
set(OS_DYLIB_EXTENSION=\".so\")

add_definitions(
	-D__UNIX
	-DPOSIX_C_SOURCE
	-D_GNU_SOURCE
	-DPLATFORM_HEADER=\"${PLATFORM_ROOT}/platform.h\"
)

set(APPL_DEST ${CMAKE_INSTALL_PREFIX}/share/arcan)
set(RES_DEST ${CMAKE_INSTALL_PREFIX}/share/arcan)
set(APIMAN_DEST ${CMAKE_INSTALL_PREFIX}/man/man3)
set(MAN_DEST ${CMAKE_INSTALL_PERFIX}/man/man1)

set(ARCAN_PLATFORM
	${PLATFORM_PATH}/mem.c
	${PLATFORM_PATH}/fmt_open.c
	${PLATFORM_PATH}/glob.c
	${PLATFORM_PATH}/map_resource.c
	${PLATFORM_PATH}/resource_io.c
	${PLATFORM_PATH}/strip_traverse.c
	${PLATFORM_PATH}/paths.c
	${PLATFORM_PATH}/appl.c
	${PLATFORM_PATH}/sem.c
	${PLATFORM_PATH}/base64.c
	${PLATFORM_PATH}/time.c
	${PLATFORM_PATH}/warning.c
	${PLATFORM_PATH}/frameserver.c
	${PLATFORM_PATH}/fsrv_guard.c
	${PLATFORM_PATH}/fdpassing.c
	${PLATFORM_PATH}/namespace.c
	${PLATFORM_PATH}/launch.c
)

set_property(SOURCE ${PLATFORM_PATH}/fdpassing.c
	APPEND PROPERTY COMPILE_FLAGS -w)
set_property(SOURCE ${PLATFORM_PATH}/fdpassing.c
	APPEND PROPERTY COMPILE_DEFINITIONS NONBLOCK_RECV)

#
# Either investigate more OS native approaches to get LED
# controller access, or find a hid- api that doesn't
# require UDev
#
if (ENABLE_LED)
	FIND_PACKAGE(UDev REQUIRED)

	LIST(APPEND MAIN_LIBRARIES ${UDEV_LIBRARIES})
	LIST(APPEND PLATFORM_SOURCES
		${CMAKE_EXTERNAL_SRCDIR}/hidapi/hid_linux.c
		${CMAKE_EXTERNAL_SRCDIR}/hidapi/hidapi.h
	)
endif()

set(LWA_PLATFORM ${ARCAN_PLATFORM})

# we don't want these coming along in LWA_PLATFORM
list(APPEND PLATFORM_SOURCES
	${PLATFORM_ROOT}/${VIDEO_PLATFORM}/video.c
	${PLATFORM_ROOT}/${INPUT_PLATFORM}/event.c
)

#
# Incomplete still, will probably be extended / fixed when testing/building on Alpine Linux
# (openrc, grsec and free from systemd and glibc? interesting - can we just drop pulse
# and d-bus as well, or switch to the reasonably clean nobus implementation)
#
if (MUSL_LIBC)
	set(MUSL ${CMAKE_CURRENT_SOURCE_DIR}/external/musl)
	ExternalProject_Add(
	libmusl
	SOURCE_DIR ${MUSL}

	CONFIGURE_COMMAND ${MUSL}/configure --prefix=${MUSL}/.libs --disable-shared
	PREFIX ${MUSL}
	BUILD_COMMAND make
	BUILD_IN_SOURCE 1
	)
	set(STDLIB ${MUSL}/.libs/lib/libc.a)
endif()

list(APPEND STDLIB
 m
 pthread
 rt
 dl
)
