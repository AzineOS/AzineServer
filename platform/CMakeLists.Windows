set (PLATFORM_SOURCES
platform/posix/fmt_open.c
platform/win32/sem.c
platform/win32/strip_traverse.c
platform/win32/shm.c
platform/win32/time.c
platform/win32/glob.c
platform/win32/paths.c
platform/win32/resource_io.c
platform/win32/warning.c
platform/win32/map_resource.c
platform/sdl/event.c
platform/sdl/video.c
)

set (FSERV_PLATFORM_SOURCES
platform/win32/warning.c
platform/win32/time.c
platform/win32/sem.c
platform/win32/shm.c
platform/win32/realpath.c
platform/sdl/event.c
)
 
add_definitions(-DPLATFORM_HEADER="platform\\win32\\platform.h")
add_definitions(-m32 -mthreads -D__WINDOWS -DPOOR_GL_SUPPORT)

# the win32/ folder should be merged with the platform sources
LIST(APPEND SOURCES 
${CMAKE_EXTERNAL_SRCDIR}/hidapi/hid_win32.cpp 
${CMAKE_EXTERNAL_SRCDIR}/hidapi/hidapi.h 
win32/arcan_target_launcher_win32.c
win32/arcan_frameserver_backend_win32.c 
win32/getopt_win32.c 
win32/getopt.h 
win32/sdl_win32_main.c 
${PLATFORM_SOURCES})

LIST(APPEND FSRV_SOURCES 
win32/arcan_frameserver_win32.c 
arcan_frameserver_resource.obj 
${FSERV_PLATFORM_SOURCES})

LIST(APPEND FSRV_LIBRARIES mingwex ws2_32 winmm)
LIST(APPEND MAIN_LIBRARIES iberty winmm setupapi mingw32)

set(BIN_DST ".")
set(RESOURCES_DST "./resources")
set(THEME_DST "./themes")

add_custom_command(
OUTPUT arcan_resource.obj
DEPENDS arcan.rc
COMMAND windres.exe
ARGS -o arcan_resource.obj
-iarcan.rc
)

add_custom_command(
OUTPUT arcan_frameserver_resource.obj
DEPENDS win32/arcan_frameserver.rc
COMMAND windres.exe
ARGS -o arcan_frameserver_resource.obj
-iarcan_frameserver.rc
)

# there must be a sane way to do this and actually have it work,
# add_custom_target on the output seems to do absolutely nothing.
add_custom_command(
OUTPUT arcan_romman.exe
DEPENDS ${CMAKE_SOURCE_DIR}/arcan_romman.rb ${CMAKE_SOURCE_DIR}/resources/scripts/romman_base.rb
COMMAND ocra
ARGS --output arcan_romman.exe ${CMAKE_SOURCE_DIR}/arcan_romman.rb ${CMAKE_SOURCE_DIR}/resources/scripts/romman_base.rb
)

add_executable( arcan WIN32 ${SOURCES} arcan_resource.obj arcan_romman.exe)
add_executable( arcan_frameserver ${FSRV_SOURCES})

# ------------- Win32 Arcan Launcher Tool -----------
include_external_msproject(ArcanLauncher ${CMAKE_SOURCE_DIR}/win32/ArcanLauncher/ArcanLauncher/ArcanLauncher.csproj
	TYPE 1FC6864D-77E3-4AE9-AB3F-3E450B4335E4
	PLATFORM "Any CPU"
	)

# ------------- Win32 Installer ------------
 file (GLOB _dlls "${CMAKE_SOURCE_DIR}/win32/lib/distr/*.dll")
 install(FILES ${_dlls} DESTINATION ${BIN_DST})
 install(FILES arcan_romman.exe DESTINATION ${BIN_DST})
 install(FILES winicon.ico DESTINATION ${BIN_DST})
 install(FILES COPYRIGHT DESTINATION ${BIN_DST})
 install(FILES oalinst.exe DESTINATION ${BIN_DST})
 install(FILES "${CMAKE_SOURCE_DIR}/win32/ArcanLauncher/ArcanLauncher/bin/Release/ArcanLauncher.exe" DESTINATION ${BIN_DST})

# overwrite to reduce hassle on Vista++, only affects themes/resources
# doesn't seem to have the desired effect however ..
 set(SHARED_PERMISSIONS OWNER_WRITE OWNER_READ GROUP_WRITE GROUP_READ WORLD_WRITE WORLD_READ)
 set(SHARED_PERMISSIONS_DIR OWNER_WRITE OWNER_READ GROUP_WRITE GROUP_READ WORLD_EXCECUTE WORLD_WRITE WORLD_READ)

 set_target_properties(arcan PROPERTIES COMPILE_FLAGS "-Dmain=SDL_main -DREPLACE_GETOPT")

 SET(CPACK_GENERATOR ${CPACK_GENERATOR};NSIS)
 SET(CPACK_NSIS_MUI_ICON "${CMAKE_CURRENT_SOURCE_DIR}/winicon.ico")
 SET(CPACK_NSIS_MUI_UNIICON "${CMAKE_CURRENT_SOURCE_DIR}/winicon.ico")
 SET(CPACK_NSIS_MUI_PRODUCT "Arcan")
 SET(CPACK_PACKAGE_INSTALL_DIRECTORY "Arcan")
 SET(CPACK_PACKAGE_VENDOR "Arcan Frontend")

# try to autoinstall OpenAL (if needed)
SET(CPACK_NSIS_EXTRA_INSTALL_COMMANDS "${CPACK_NSIS_EXTRA_INSTALL_COMMANDS} 
WriteRegStr HKLM 'Software\\\\Arcan Frontend\\\\Arcan' 'InstallDir' '\$INSTDIR'
ExecWait '\\\"$INSTDIR\\\\oalinst.exe\\\" /s' ")

SET(CPACK_NSIS_CREATE_ICONS "CreateShortCut '\$SMPROGRAMS\\\\$STARTMENU_FOLDER\\\\Arcan (Welcome).lnk' '\$INSTDIR\\\\arcan.exe' 'welcome'")
SET(CPACK_NSIS_CREATE_ICONS_EXTRA "
	AccessControl::GrantOnFile '\$INSTDIR\\\\themes' '(BU)' 'GenericRead + GenericWrite'
	AccessControl::GrantOnFile '\$INSTDIR\\\\resources' '(BU)' 'GenericRead + GenericWrite'
	CreateShortCut '\$SMPROGRAMS\\\\$STARTMENU_FOLDER\\\\ArcanLauncher.lnk' '\$INSTDIR\\\\ArcanLauncher.exe' ''
	CreateShortCut '\$SMPROGRAMS\\\\$STARTMENU_FOLDER\\\\Build DB (full).lnk' '\$INSTDIR\\\\arcan_romman.exe' 'builddb --mamegood --mameskipclone --mameshorttitle --dbname ./resources/arcandb.sqlite --rompath ./resources/games --targetpath ./resources/targets'
	CreateShortCut '\$SMPROGRAMS\\\\$STARTMENU_FOLDER\\\\Arcan (Gridle).lnk' '\$INSTDIR\\\\arcan.exe' 'gridle'
	CreateShortCut '\$SMPROGRAMS\\\\$STARTMENU_FOLDER\\\\Arcan (Gridle Remote).lnk' '\$INSTDIR\\\\arcan.exe' 'gridle_remote'
	CreateShortCut '\$SMPROGRAMS\\\\$STARTMENU_FOLDER\\\\Arcan (Streamer).lnk' '\$INSTDIR\\\\arcan.exe' '-V -v streamer'
  WriteINIStr '$SMPROGRAMS\\\\$STARTMENU_FOLDER\\\\Help (online).url' 'InternetShortcut' 'URL' 'http://sourceforge.net/p/arcanfe/wiki/Home/'
")

SET(CPACK_NSIS_DELETE_ICONS_EXTRA "
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Arcan (Welcome).lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Tests\\\\Event Test.lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Tests\\\\Font Test.lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Tests\\\\Event Test.lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Tests\\\\Sound Test.lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Tests\\\\Image Test.lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Tests\\\\Movie Test.lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Tests\\\\Core Comparator.lnk'
	RMDir '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Tests'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Build DB (Full).lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Arcan (Gridle).lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Arcan (Gridle Remote).lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Arcan (Streamer).lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\ArcanLauncher.lnk'
	Delete '\$SMPROGRAMS\\\\$MUI_TEMP\\\\Help (online).url'
")

 SET(CMAKE_INSTALL_SYSTEM_RUNTIME_DESTINATION ".")

