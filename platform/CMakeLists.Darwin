set (PLATFORM_PATH ${CMAKE_SOURCE_DIR}/platform/posix)

set (PLATFORM_SOURCES
	${PLATFORM_PATH}/../stub/mem.c
	${PLATFORM_PATH}/fmt_open.c
	${PLATFORM_PATH}/glob.c
	${PLATFORM_PATH}/map_resource.c
	${PLATFORM_PATH}/resource_io.c
	${PLATFORM_PATH}/ilaunch.c
	${PLATFORM_PATH}/strip_traverse.c
	${PLATFORM_PATH}/paths.c
	${PLATFORM_PATH}/../darwin/sem.c
	${PLATFORM_PATH}/shm.c
	${PLATFORM_PATH}/base64.c
	${PLATFORM_PATH}/../darwin/time.c
	${PLATFORM_PATH}/warning.c
	${PLATFORM_PATH}/frameserver.c
	${CMAKE_SOURCE_DIR}/external/hidapi/hid_darwin.c 
	${CMAKE_SOURCE_DIR}/external/hidapi/hidapi.h 
)

set (SDL_PLATFORM_SOURCES
	${PLATFORM_PATH}/../sdl/event.c
	${PLATFORM_PATH}/../sdl/video.c
	${PLATFORM_PATH}/../darwin/SDLmain.m
)

set (FSRV_PLATFORM_SOURCES
	${CMAKE_SOURCE_DIR}/frameserver/frameserver.c
	${PLATFORM_PATH}/base64.c
	${PLATFORM_PATH}/warning.c
	${PLATFORM_PATH}/../darwin/time.c
	${PLATFORM_PATH}/base64.c
	${PLATFORM_PATH}/sem.c
	${PLATFORM_PATH}/shm.c
)

# map_file is the default and doesn't need to be set here
set_property(SOURCE ${PLATFORM_PATH}/map_resource.c 
				PROPERTY COMPILE_FLAGS -DMAP_FILE=0) 

set_property(SOURCE ${CMAKE_SOURCE_DIR}/engine/arcan_main.c
				PROPERTY COMPILE_FLAGS -Dmain=SDL_main)

find_library(IOKIT NAMES IOKit)
find_library(COREFOUNDATION NAMES CoreFoundation)

if (${ENABLE_LIBRETRO})
if (${ENABLE_LIBRETRO3D})
	list(APPEND FSRV_LIBRETRO_SOURCES 
		${PLATFORM_PATH}/../sdl/video_mini.c
		${PLATFORM_PATH}/../darwin/SDLmain_fsrv.m)
	list(APPEND FSRV_LIBRETRO_LIBRARIES 
		${SDL_LIBRARY} 
		${GLEW_LIBRARIES} 
		${OPENGL_gl_LIBRARY}
	)
endif(${ENABLE_LIBRETRO3D})
endif(${ENABLE_LIBRETRO})

include(${CMAKE_CURRENT_SOURCE_DIR}/platform/CMakeLists.fsrv)

if (SPLIT_FRAMESERVER)
	set_property(TARGET arcan_frameserver_libretro APPEND PROPERTY
		COMPILE_DEFINITIONS ENABLE_FSRV_LIBRETRO main=SDL_main)
else()
	set_property(TARGET arcan_frameserver APPEND PROPERTY COMPILE_DEFINITIONS
		${definitions} main=SDL_main)
endif()

add_definitions(-DPLATFORM_HEADER=\"${PLATFORM_PATH}/platform.h\"
	-DGL_HEADERS=\"${PLATFORM_PATH}/../sdl/glheaders.h\")

add_definitions(-DLUA_51 -D_WITH_DPRINTF -D__UNIX -D__APPLE__)

LIST(APPEND MAIN_LIBRARIES ${IOKIT} ${COREFOUNDATION})
LIST(APPEND FSRV_LIBRARIES ${IOKIT} ${COREFOUNDATION})
LIST(APPEND SOURCES
	${CMAKE_SOURCE_DIR}/engine/arcan_target_launcher.c)

add_executable( arcan ${SOURCES} ${PLATFORM_SOURCES} ${SDL_PLATFORM_SOURCES})

if (ENABLE_LWA)
	message("LWA support enabled, video backend (${VIDEO_PLATFORM})")

	set_property(SOURCE ${PLATFORM_PATH}/../arcan/video.c
		APPEND PROPERTY COMPILE_DEFINITIONS 
		SDL_PLATFORM
		GL_HEADERS=\"${PLATFORM_PATH}/../sdl/glheaders.h\"
	)

	set(LWA_SOURCES
		${PLATFORM_PATH}/../darwin/SDLmain_fsrv.m
		${PLATFORM_PATH}/../arcan/video.c)

	add_executable( arcan_lwa
		${SOURCES} 
		${PLATFORM_SOURCES} 
		${LWA_SOURCES}
	)

	set_property(TARGET arcan_lwa 
		APPEND PROPERTY COMPILE_DEFINITIONS SDL_PLATFORM) 	
endif()

# Packaging and installation. build a DMG which installs to a default
# Application folder, with resources, themes and frameworks included.
#
# The default search- order for resources/themes in the main app,
# should be ENV -> home -> unix "share" -> bundle

set(CPACK_BUNDLE_NAME Arcan)
set(CPACK_BUNDLE_PLIST ${PLATFORM_PATH}/../darwin/Info.plist)
set(CPACK_BUNDLE_ICON ${CMAKE_SOURCE_DIR}/distr/Arcan.icns)

set(frameworks_dir ${bundle_name}/Contents/Frameworks/)
set(CMAKE_INSTALL_PREFIX ${bundle_name}/Contents/MacOS/)
set(DATA_INSTALL_DIR ".")
set(BIN_DST "../MacOS")
set(THEME_DST "../Resources/themes")
set(RESOURCES_DST "../Resources/resources")

#install(TARGETS arcan_hijack DESTINATION ${BIN_DST})
install(FILES ${CMAKE_SOURCE_DIR}/utils/arcan_romman.rb 
	DESTINATION ${BIN_DST} 
	PERMISSIONS
	WORLD_READ WORLD_EXECUTE OWNER_WRITE OWNER_READ 
	OWNER_EXECUTE GROUP_READ GROUP_EXECUTE)

SET(CPACK_GENERATOR ${CPACK_GENERATOR};Bundle)


