# Expects:
#  PLATFORM_ROOT
#
# Defines:
#  ARCAN_PLATFORM
#  FSRV_PLATFORM
#  SHMIF_PLATFORM
#  LWA_PLATFORM
#
#  PLATFORM_HEADER (global)
#  OS_DYLIB_EXTENSION
#

set (PLATFORM_PATH ${PLATFORM_ROOT}/posix)

add_definitions(-DPLATFORM_HEADER=\"${PLATFORM_ROOT}/platform.h\" -std=gnu11
	-Wall -Wno-missing-braces -Wno-unused-function -DCLOCK_SOURCE_RAW -DLUA_51
	-D__UNIX -D_POSIX_C_SOURCE -D_GNU_SOURCE -DOS_DYLIB_EXTENSION=\".so\")

message(STATUS " scanning for Linux specific libraries. ")

set (ARCAN_PLATFORM
	${PLATFORM_PATH}/mem.c
	${PLATFORM_PATH}/fmt_open.c
	${PLATFORM_PATH}/glob.c
	${PLATFORM_PATH}/map_resource.c
	${PLATFORM_PATH}/resource_io.c
	${PLATFORM_PATH}/strip_traverse.c
	${PLATFORM_PATH}/paths.c
	${PLATFORM_PATH}/appl.c
	${PLATFORM_PATH}/sem.c
	${PLATFORM_PATH}/base64.c
	${PLATFORM_PATH}/time.c
	${PLATFORM_PATH}/warning.c
	${PLATFORM_PATH}/frameserver.c
	${PLATFORM_PATH}/fsrv_guard.c
	${PLATFORM_PATH}/fdpassing.c
	${PLATFORM_PATH}/namespace.c
	${PLATFORM_PATH}/launch.c
)

# since these are used on multiple targets, force the define here.
set_property(SOURCE platform/posix/fdpassing.c
	APPEND PROPERTY COMPILE_FLAGS -w)
set_property(SOURCE platform/posix/fdpassing.c
	APPEND PROPERTY COMPILE_DEFINITIONS NONBLOCK_RECV)

#
# Either investigate more OS native approaches to get LED
# controller access, or find a hid- api that doesn't
# require UDev
#
if (ENABLE_LED)
	FIND_PACKAGE(UDev REQUIRED)

	LIST(APPEND MAIN_LIBRARIES ${UDEV_LIBRARIES})
	LIST(APPEND PLATFORM_SOURCES
		${CMAKE_EXTERNAL_SRCDIR}/hidapi/hid_linux.c
		${CMAKE_EXTERNAL_SRCDIR}/hidapi/hidapi.h
	)
endif()

set(SHMIF_PLATFORM
	${PLATFORM_PATH}/warning.c
	${PLATFORM_PATH}/time.c
	${PLATFORM_PATH}/sem.c
	${PLATFORM_PATH}/fdpassing.c
)

set(LWA_PLATFORM ${ARCAN_PLATFORM})

# we don't want these coming along in LWA_PLATFORM
LIST(APPEND PLATFORM_SOURCES
	${PLATFORM_ROOT}/${VIDEO_PLATFORM}/video.c
	${PLATFORM_ROOT}/${INPUT_PLATFORM}/event.c
)

set(FSRV_PLATFORM ${SHMIF_PLATFORM})

LIST(APPEND STDLIB
 rt
 dl)
