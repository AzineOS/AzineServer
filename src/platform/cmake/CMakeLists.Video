#
# Expects:
#  VIDEO_PLATFORM (or FATAL)
#  PLATFORM_ROOT
#
# Defines:
#  INPUT_PLATFORM - Video/Input are rather tightly connected
#  LWA_PLATFORM_STR - Will also be built into shmif_ext
#  VIDEO_LIBRARIES
#
# Modifies:
#  INCLUDE_DIRS
#


# legacy platform for weaker platforms that don't have/support KMS
if(VIDEO_PLATFORM STREQUAL "egl-gles")
	if (NOT INPUT_PLATFORM)
		set(INPUT_PLATFORM "evdev")
	endif()

	find_package(EGL REQUIRED QUIET)
	add_definitions(-DSHMIF_TUI_DISABLE_GPU)

	if (GLES2_BCM_IMPLEMENTATION)
		amsg("broadcom (BCM) GLES implementation found, set BCM_ROOT to bad dir to disable")
		list(APPEND ARCAN_DEFINITIONS WITH_BCM)
		set_property(SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/platform/egl-gles/video.c
			APPEND PROPERTY COMPILE_FLAGS -fgnu89-inline)
	endif()

	list(APPEND INCLUDE_DIRS
		${GLES2_INCLUDE_DIRS}
		${EGL_INCLUDE_DIRS}
	)

	set(LWA_PLATFORM_STR "stub")
	set(VIDEO_PLATFORM_SOURCES ${PLATFORM_ROOT}/egl-gles/video.c)
	list(APPEND VIDEO_LIBRARIES ${EGL_LIBRARIES})

#
# will hopefully become the default on BSDs/linux
#
elseif(VIDEO_PLATFORM STREQUAL "egl-dri")
	if (NOT INPUT_PLATFORM)
		set(INPUT_PLATFORM "evdev")
	endif()

	find_package(EGL REQUIRED QUIET)
	find_package(GBMKMS REQUIRED QUIET)

	list(APPEND VIDEO_LIBRARIES
		${EGL_LIBRARIES}
		${GBMKMS_LIBRARIES}
	)
	list(APPEND INCLUDE_DIRS ${GBMKMS_INCLUDE_DIRS})
	set(VIDEO_PLATFORM_SOURCES
		${PLATFORM_ROOT}/egl-dri/video.c)
	if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
		list(APPEND VIDEO_PLATFORM_SOURCES
				${PLATFORM_ROOT}/egl-dri/libbacklight.c)
	elseif (${CMAKE_SYSTEM_NAME} MATCHES "OpenBSD")
		list(APPEND VIDEO_PLATFORM_SOURCES
				${PLATFORM_ROOT}/openbsd/libbacklight.c)
	else()
		list(APPEND VIDEO_PLATFORM_SOURCES
				${PLATFORM_ROOT}/stub/libbacklight.c)
	endif()
	set(LWA_PLATFORM_STR "egl-dri-rnode")

#
# only option on OSX/Windows currently, would also work for
# drawing to Wayland compositors (though the list of dependencies
# becomes rather nasty).
#
elseif (VIDEO_PLATFORM STREQUAL "sdl")
	if (NOT INPUT_PLATFORM)
		set(INPUT_PLATFORM "sdl")
	endif()

	find_package(SDL REQUIRED QUIET)

	list(APPEND INCLUDE_DIRS ${SDL_INCLUDE_DIR})
	list(APPEND VIDEO_LIBRARIES ${SDL_LIBRARY})
	set(VIDEO_PLATFORM_SOURCES ${PLATFORM_ROOT}/sdl/video.c)

	if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
		FIND_PACKAGE(OpenGL REQUIRED QUIET)
		set(VIDEO_LIBRARIES ${VIDEO_LIBRARIES} ${OPENGL_gl_LIBRARY})
		set(LWA_PLATFORM_STR "darwin")
	elseif( ${CMAKE_SYSTEM_NAME} MATCHES "Linux")
		find_package(EGL REQUIRED QUIET)
		find_package(GBMKMS REQUIRED QUIET)

		list(APPEND VIDEO_LIBRARIES
			${EGL_LIBRARIES}
			${GBMKMS_LIBRARIES}
		)
		list(APPEND INCLUDE_DIRS ${GBMKMS_INCLUDE_DIRS})
		set(LWA_PLATFORM_STR "egl-dri-rnode")
	else()
		set(LWA_PLATFORM_STR "x11")
		FIND_PACKAGE(X11 REQUIRED QUIET)
		set(VIDEO_LIBRARIES ${VIDEO_LIBRARIES} ${X11_LIBRARIES})
		list(APPEND INCLUDE_DIRS ${X11_INCLUDE_DIRS})
	endif()

elseif(VIDEO_PLATFORM STREQUAL "sdl2")
	if (NOT INPUT_PLATFORM)
		set(INPUT_PLATFORM "sdl2")
	endif()

	find_package(SDL2 REQUIRED QUIET)
	list(APPEND INCLUDE_DIRS ${SDL2_INCLUDE_DIR})
	list(APPEND VIDEO_LIBRARIES ${SDL2_LIBRARY})
	set(VIDEO_PLATFORM_SOURCES ${PLATFORM_ROOT}/sdl2/video.c)

else()
# there are a few things that is just <invective> when it comes
# to CMake (outside the syntax itself and that it took 10+ years
# to get to a point where you can split strings across lines),
# one is why in the name of everything holy is a logging function
# the only way to do an exit? without the ability to reset a return value.
# That is just <series of invectives>. In addition, it seems
# impossible to not have it spew user-unfriendly garbage that hides
# the CLEAR AND OBVIOUS message you want to convey. Thanks.
	message(FATAL_ERROR
"${CLB_WHT}No video platform defined${CLB_RST}, see -DVIDEO_PLATFORM=xx above${CL_RST}.")
endif()

if (NOT ENABLE_LWA)
	set(LWA_PLATFORM_STR "stub")
endif()

if (INPUT_PLATFORM STREQUAL "evdev")
	find_package(XKB QUIET)
	if (XKB_FOUND)
		amsg("${CL_YEL}evdev    \t${CL_GRN}libxkbcommon${CL_RST}")
		set_property(SOURCE ${PLATFORM_ROOT}/evdev/event.c APPEND PROPERTY
			COMPILE_DEFINITIONS HAVE_XKBCOMMON)
		list(APPEND VIDEO_LIBRARIES ${XKB_LIBRARIES})
		list(APPEND INCLUDE_DIRS ${XKB_INCLUDE_DIRS})
	else()
		amsg("${CL_YEL}evdev    \t${CL_RED}no libxkbcommon{CL_RST}")
	endif()
endif()

