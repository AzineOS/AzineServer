From 2cf14e983c75b584c4278650d32d708ce781f7a9 Mon Sep 17 00:00:00 2001
From: bjornstahl <arcan-fe@nospam>
Date: Mon, 7 Jul 2014 17:22:12 +0200
Subject: [PATCH] arcan shmif backend working

---
 Alc/ALc.c                 |  5 +--
 Alc/backends/arcan.c      | 80 ++++++++++++++++++++++++++++++++++++-----------
 CMakeLists.txt            |  1 +
 OpenAL32/Include/alMain.h |  2 ++
 config.h.in               |  3 ++
 5 files changed, 71 insertions(+), 20 deletions(-)

diff --git a/Alc/ALc.c b/Alc/ALc.c
index 3b78ce8..1ff80f4 100644
--- a/Alc/ALc.c
+++ b/Alc/ALc.c
@@ -97,12 +97,13 @@ static struct BackendInfo BackendList[] = {
 #ifdef HAVE_OPENSL
     { "opensl", NULL, alc_opensl_init, alc_opensl_deinit, alc_opensl_probe, EmptyFuncs },
 #endif
-
+#ifdef HAVE_ARCAN
+    { "arcan", NULL, alc_arcan_init, NULL, alc_arcan_probe, EmptyFuncs },
+#endif
     { "null", ALCnullBackendFactory_getFactory, NULL, NULL, NULL, EmptyFuncs },
 #ifdef HAVE_WAVE
     { "wave", NULL, alc_wave_init, alc_wave_deinit, alc_wave_probe, EmptyFuncs },
 #endif
-
     { NULL, NULL, NULL, NULL, NULL, EmptyFuncs }
 };
 #undef EmptyFuncs
diff --git a/Alc/backends/arcan.c b/Alc/backends/arcan.c
index bae30da..fdf4b71 100644
--- a/Alc/backends/arcan.c
+++ b/Alc/backends/arcan.c
@@ -41,11 +41,12 @@ static ALCenum open_playback(ALCdevice*, const ALCchar*);
 static ALCboolean reset_playback(ALCdevice* dev);
 static ALCboolean start_playback(ALCdevice* dev);
 static void stop_playback(ALCdevice* dev);
+static void close_playback(ALCdevice* dev);

 static const ALCchar arcan_device[] = "Arcan Shmif";
 static const BackendFuncs arcan_funcs = {
 	open_playback,
-	NULL,
+	close_playback,
 	reset_playback,
 	start_playback,
 	stop_playback,
@@ -65,50 +66,88 @@ struct driver_data {
 	althrd_t thread;
 };

+static const long NTMS = 1000000000l;
 static int mixer_cb(void* in)
 {
-	struct driver_data* ctx = in;
-	ALCdevice* dev = ctx->dev;
-
-#ifndef SYNCH_CLOCK
-	#define SYNCH_CLOCK 60.0
-#endif
-
-	size_t frame_size = ARCAN_SHMPAGE_SAMPLERATE *
-		ARCAN_SHMPAGE_ACHANNELS * ARCAN_SHMPAGE_SAMPLE_SIZE / SYNCH_CLOCK;
-	frame_size += frame_size % 2;
+	ALCdevice* dev = in;
+	struct driver_data* ctx = dev->ExtraData;
+	struct timespec now, start;
+	int64_t done = 0;
+	const long rest = (long)((uint64_t)dev->UpdateSize *
+		NTMS / dev->Frequency / 2);
+
+	althrd_setname(althrd_current(), MIXER_THREAD_NAME);
+	SetRTPriority();
+
+/*
+ * we have to manually maintain a clock,
+ * the same principal timing control approach as in frameserver/libretro.c
+ * could be used, this version is plucked from Wave backend.
+ */
+	altimespec_get(&start, AL_TIME_UTC);
+	size_t frame_sz = FrameSizeFromDevFmt(dev->FmtChans, dev->FmtType);

-	while(ctx->alive){
+	while(ctx->alive && dev->Connected){
 		ALubyte* write_ptr = ctx->cont->audp;
-		aluMixData(dev, write_ptr, frame_size);
-		ctx->cont->addr->abufused += frame_size;
-		arcan_shmif_signal(ctx->cont, SHMIF_SIGAUD);
+
+		altimespec_get(&now, AL_TIME_UTC);
+		int64_t avail = (now.tv_sec - start.tv_sec) * dev->Frequency;
+		avail += (int64_t)(now.tv_nsec - start.tv_nsec) * dev->Frequency / NTMS;
+
+/* wraparound, NTP, ... */
+		if (avail < done){
+			done = avail - dev->UpdateSize;
+		}
+
+		if (avail - done < dev->UpdateSize){
+			al_nssleep(0, rest);
+		}
+		else{
+			while (avail - done >= dev->UpdateSize){
+				aluMixData(dev, write_ptr, dev->UpdateSize);
+				ctx->cont->addr->abufused += dev->UpdateSize * frame_sz;
+				done += dev->UpdateSize;
+			}
+
+			arcan_shmif_signal(ctx->cont, SHMIF_SIGAUD);
+		}
 	}

 	return 0;
 }

+static void close_playback(ALCdevice* dev)
+{
+	TRACE("arcan backend) close on dev %"PRIxPTR"\n", (uintptr_t) dev);
+}
+
 static ALCenum open_playback(ALCdevice* dev, const ALCchar* name)
 {
 	struct arcan_shmif_cont* cont = arcan_shmif_primary(SHMIF_INPUT);
+	TRACE("(arcan backend) open, context: %"PRIxPTR"\n", (uintptr_t) cont);
+
 	if (!cont)
 		return ALC_INVALID_VALUE;

+	TRACE("(arcan backend) open\n");
 	struct driver_data* data = malloc(sizeof(struct driver_data));

-	data->alive = true;
+	data->alive = false;
 	data->dev = dev;
 	data->cont = cont;

 	dev->ExtraData = data;
-	al_string_copy_cstr(&dev->DeviceName, name ? name : "arcan_shmif");
+	al_string_copy_cstr(&dev->DeviceName,
+		name && strlen(name) > 0 ? name : "arcan_shmif");

 	return ALC_NO_ERROR;
 }

 static ALCboolean reset_playback(ALCdevice* dev)
 {
-	struct arcan_shmif_cont* cont = dev->ExtraData;
+	struct driver_data* data = dev->ExtraData;
+	struct arcan_shmif_cont* cont = data->cont;
+
 	if (!cont->addr)
 		return ALC_FALSE;

@@ -123,6 +162,7 @@ static ALCboolean reset_playback(ALCdevice* dev)
 	cont->addr->abufused = 0;
 	arcan_event_enqueue(&cont->outev, &ev);

+	SetDefaultWFXChannelOrder(dev);
 	return ALC_TRUE;
 }

@@ -130,6 +170,8 @@ static ALCboolean start_playback(ALCdevice* dev)
 {
 	struct driver_data* data = dev->ExtraData;

+	data->alive = true;
+	TRACE("(arcan backend) start\n");
 	if (althrd_create(&data->thread, mixer_cb, dev) != althrd_success){
 		free(data);
 		return ALC_FALSE;
@@ -150,12 +192,14 @@ static void stop_playback(ALCdevice* dev)

 ALCboolean alc_arcan_init(BackendFuncs* func_list)
 {
+	TRACE("(arcan backend) init\n");
 	*func_list = arcan_funcs;
 	return ALC_TRUE;
 }

 void alc_arcan_probe(enum DevProbe type)
 {
+	TRACE("(arcan backend) probe\n");
 	switch (type){
 	case ALL_DEVICE_PROBE:
 		AppendAllDevicesList(arcan_device);
diff --git a/CMakeLists.txt b/CMakeLists.txt
index eb0d5d1..25c67b7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -725,6 +725,7 @@ IF(ALSOFT_REQUIRE_ARCAN)
 		${ARCAN_SHMIF_PLATFORM})

 	LIST(APPEND ALC_OBJS ${ARCAN_SHMIF_FILES})
+	ADD_DEFINITIONS(-DPLATFORM_HEADER=\"${ARCAN_SHMIF_PLATFORM_HEADER}\")
 	INCLUDE_DIRECTORIES(${ARCAN_SHMIF_PATH})
 ENDIF()

diff --git a/OpenAL32/Include/alMain.h b/OpenAL32/Include/alMain.h
index 8cd270d..2b974b0 100644
--- a/OpenAL32/Include/alMain.h
+++ b/OpenAL32/Include/alMain.h
@@ -485,6 +485,8 @@ ALCboolean alc_wave_init(BackendFuncs *func_list);
 void alc_wave_deinit(void);
 void alc_wave_probe(enum DevProbe type);
 ALCboolean alc_ca_init(BackendFuncs *func_list);
+ALCboolean alc_arcan_init(BackendFuncs *func_list);
+void alc_arcan_probe(enum DevProbe type);
 void alc_ca_deinit(void);
 void alc_ca_probe(enum DevProbe type);
 ALCboolean alc_opensl_init(BackendFuncs *func_list);
diff --git a/config.h.in b/config.h.in
index 3fdc0c7..bd12e55 100644
--- a/config.h.in
+++ b/config.h.in
@@ -49,6 +49,9 @@
 /* Define if we have the QSA backend */
 #cmakedefine HAVE_QSA

+/* Define if we have the Arcan backend */
+#cmakedefine HAVE_ARCAN
+
 /* Define if we have the MMDevApi backend */
 #cmakedefine HAVE_MMDEVAPI

--
1.9.1

