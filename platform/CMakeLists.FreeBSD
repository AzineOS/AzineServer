set (PLATFORM_PATH ${CMAKE_SOURCE_DIR}/platform/posix)

set (PLATFORM_SOURCES
${PLATFORM_PATH}/../stub/mem.c
${PLATFORM_PATH}/fmt_open.c
${PLATFORM_PATH}/glob.c
${PLATFORM_PATH}/map_resource.c
${PLATFORM_PATH}/resource_io.c
${PLATFORM_PATH}/ilaunch.c
${PLATFORM_PATH}/strip_traverse.c
${PLATFORM_PATH}/paths.c
${PLATFORM_PATH}/base64.c
${PLATFORM_PATH}/sem.c
${PLATFORM_PATH}/shm.c
${PLATFORM_PATH}/time.c
${PLATFORM_PATH}/warning.c
${PLATFORM_PATH}/frameserver.c
${PLATFORM_PATH}/../sdl/event.c
${PLATFORM_PATH}/../sdl/video.c
${PLATFORM_PATH}/fdpassing.c
${PLATFORM_PATH}/namespace.c
)

set (FSERV_PLATFORM_SOURCES
${PLATFORM_PATH}/warning.c
${PLATFORM_PATH}/time.c
${PLATFORM_PATH}/base64.c
${PLATFORM_PATH}/sem.c
${PLATFORM_PATH}/shm.c
${PLATFORM_PATH}/fdpassing.c
)

if (${ENABLE_LIBRETRO})
if (${ENABLE_LIBRETRO3D})
	list(APPEND FSRV_LIBRETRO_SOURCES ${PLATFORM_PATH}/../sdl/video_mini.c)
	list(APPEND FSRV_LIBRETRO_LIBRARIES ${SDL_LIBRARY})
	list(APPEND FSRV_LIBRETRO_LIBRARIES ${GLEW_LIBRARIES})
	list(APPEND FSRV_LIBRETRO_LIBRARIES ${OPENGL_gl_LIBRARY})
endif(${ENABLE_LIBRETRO3D})
endif(${ENABLE_LIBRETRO})

LIST(APPEND FSRV_SOURCES frameserver/frameserver.c)
LIST(APPEND STDLIB
	rt
)

add_definitions(-DPLATFORM_HEADER=\"${PLATFORM_PATH}/platform.h\"
	-DGL_HEADERS=\"${PLATFORM_PATH}/../sdl/glheaders.h\"
	-DLUA_51 -D_WITH_DPRINTF -D__UNIX -D_LIBUSB_BSD)

include_directories(platform/freebsd)

LIST(APPEND FSRV_SOURCES frameserver/frameserver.c
	${FSERV_PLATFORM_SOURCES})

include(${PLATFORM_PATH}/../CMakeLists.fsrv)

LIST(APPEND SOURCES ${PLATFORM_SOURCES})
LIST(APPEND SOURCES
${CMAKE_EXTERNAL_SRCDIR}/hidapi/hid_bsd.c
${CMAKE_EXTERNAL_SRCDIR}/hidapi/hidapi.h
	engine/arcan_target_launcher.c
)

LIST(APPEND MAIN_LIBRARIES usb rt)
add_library(arcan_hijack SHARED
	hijack/arcan_target_unix.c
 	hijack/arcan_target.c
	shmif/arcan_shmif.h
	shmif/arcan_shmif_interop.h
	shmif/arcan_shmif_control.c
	shmif/arcan_shmif_interop.c
	${PLATFORM_PATH}/warning.c
	${PLATFORM_PATH}/sem.c
	frameserver/ntsc/snes_ntsc.c
	frameserver/resampler/resample.c
)

set_property(TARGET arcan_hijack PROPERTY
	COMPILE_DEFINITIONS
	ENABLE_X11HIJACK
	ENABLE_WINE_HIJACK
)

target_link_libraries(arcan_hijack ${SDL_LIBRARY} ${OPENGL_gl_LIBRARY})

set(BIN_DST ${CMAKE_INSTALL_PREFIX}/bin)
set(THEME_DST ${CMAKE_INSTALL_PREFIX}/share/arcan/themes)
set(RESOURCES_DST ${CMAKE_INSTALL_PREFIX}/share/arcan/resources)

add_executable( arcan ${SOURCES})

install(FILES ${CMAKE_SOURCE_DIR}/doc/arcan.1
	DESTINATION /usr/local/share/man/man1
)

install(TARGETS arcan_hijack DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(FILES ${CMAKE_SOURCE_DIR}/utils/arcan_romman.rb
	DESTINATION ${BIN_DST}
	PERMISSIONS
	WORLD_READ WORLD_EXECUTE
	OWNER_WRITE OWNER_READ OWNER_EXECUTE
 	GROUP_READ GROUP_EXECUTE
)
