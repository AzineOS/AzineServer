# Expects:
#  PLATFORM_ROOT
#
# Defines:
#  ARCAN_PLATFORM
#  FSRV_PLATFORM
#  SHMIF_PLATFORM
#  LWA_PLATFORM
#  STDLIB
#
#  APPL_DEST
#  RES_DEST
#  APIMAN_DEST
#  MAN_DEST
#
# Modifies:
#  compile_options (global)
#  PLATFORM_HEADER (global)
#  OS_DYLIB_EXTENSION
#

set (PLATFORM_PATH ${PLATFORM_ROOT}/posix)
set(OS_DYLIB_EXTENSION=\".so\")
add_definitions(
	-DPLATFORM_HEADER=\"${PLATFORM_ROOT}/platform.h\"
	-D_WITH_DPRINTF_
	-D__UNIX
        -D__BSD
	-DLIBUSB_BSD
	-DCLOCK_MONOTONIC_RAW=CLOCK_REALTIME_FAST
)

message(STATUS " scanning for FreeBSD specific libraries. ")

find_library(ICONV NAMES iconv REQUIRED)
LIST(APPEND ARCAN_LIBRARIES ${ICONV} usb usbhid)

set (ARCAN_PLATFORM
	${PLATFORM_PATH}/mem.c
	${PLATFORM_PATH}/fmt_open.c
	${PLATFORM_PATH}/glob.c
	${PLATFORM_PATH}/map_resource.c
	${PLATFORM_PATH}/resource_io.c
	${PLATFORM_PATH}/strip_traverse.c
	${PLATFORM_PATH}/paths.c
	${PLATFORM_PATH}/dbpath.c
	${PLATFORM_PATH}/base64.c
	${PLATFORM_PATH}/sem.c
	${PLATFORM_PATH}/fsrv_guard.c
	${PLATFORM_PATH}/time.c
	${PLATFORM_PATH}/appl.c
	${PLATFORM_PATH}/warning.c
	${PLATFORM_PATH}/frameserver.c
	${PLATFORM_PATH}/fdpassing.c
	${PLATFORM_PATH}/namespace.c
	${PLATFORM_PATH}/launch.c
	${EXTERNAL_SRC_DIR}/hidapi/hid.c
	${EXTERNAL_SRC_DIR}/hidapi/hidapi.h
)

set_property(SOURCE platform/posix/fdpassing.c
	APPEND PROPERTY COMPILE_FLAGS -w)
set_property(SOURCE platform/posix/fdpassing.c
	APPEND PROPERTY COMPILE_DEFINITIONS NONBLOCK_RECV)

set (SHMIF_PLATFORM
	${PLATFORM_PATH}/warning.c
	${PLATFORM_PATH}/time.c
	${PLATFORM_PATH}/sem.c
	${PLATFORM_PATH}/fdpassing.c
)

set (LWA_PLATFORM_SOURCES
	${PLATFORM_SOURCES}
	${SHMIF_SOURCES}
	${PLATFORM_PATH}/../arcan/video.c
)

set(LWA_PLATFORM ${ARCAN_PLATFORM})

# we don't want these coming along in LWA_PLATFORM
LIST(APPEND PLATFORM_SOURCES
	${PLATFORM_ROOT}/${VIDEO_PLATFORM}/video.c
	${PLATFORM_ROOT}/${INPUT_PLATFORM}/event.c
)

set(APPL_DEST ${CMAKE_INSTALL_PREFIX}/share/arcan)
set(RES_DEST ${CMAKE_INSTALL_PREFIX}/share/arcan)
set(APIMAN_DEST ${CMAKE_INSTALL_PREFIX}/man/man3)
set(MAN_DEST ${CMAKE_INSTALL_PERFIX}/man/man1)

LIST(APPEND STDLIB
	rt
	m
	thr
)
